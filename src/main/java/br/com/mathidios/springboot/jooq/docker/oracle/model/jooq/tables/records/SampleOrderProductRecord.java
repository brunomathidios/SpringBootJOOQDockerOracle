/*
 * This file is generated by jOOQ.
 */
package br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.tables.records;


import br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.tables.SampleOrderProduct;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SampleOrderProductRecord extends UpdatableRecordImpl<SampleOrderProductRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 2022104900;

    /**
     * Setter for <code>SAMPLE.SAMPLE_ORDER_PRODUCT.ID_ORDER_PRODUCT</code>.
     */
    public void setIdOrderProduct(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>SAMPLE.SAMPLE_ORDER_PRODUCT.ID_ORDER_PRODUCT</code>.
     */
    public Long getIdOrderProduct() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>SAMPLE.SAMPLE_ORDER_PRODUCT.ID_ORDER</code>.
     */
    public void setIdOrder(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>SAMPLE.SAMPLE_ORDER_PRODUCT.ID_ORDER</code>.
     */
    public Long getIdOrder() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>SAMPLE.SAMPLE_ORDER_PRODUCT.ID_PRODUCT</code>.
     */
    public void setIdProduct(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>SAMPLE.SAMPLE_ORDER_PRODUCT.ID_PRODUCT</code>.
     */
    public Long getIdProduct() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SampleOrderProduct.SAMPLE_ORDER_PRODUCT.ID_ORDER_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return SampleOrderProduct.SAMPLE_ORDER_PRODUCT.ID_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return SampleOrderProduct.SAMPLE_ORDER_PRODUCT.ID_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getIdOrderProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getIdOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getIdProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getIdOrderProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getIdOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getIdProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleOrderProductRecord value1(Long value) {
        setIdOrderProduct(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleOrderProductRecord value2(Long value) {
        setIdOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleOrderProductRecord value3(Long value) {
        setIdProduct(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleOrderProductRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SampleOrderProductRecord
     */
    public SampleOrderProductRecord() {
        super(SampleOrderProduct.SAMPLE_ORDER_PRODUCT);
    }

    /**
     * Create a detached, initialised SampleOrderProductRecord
     */
    public SampleOrderProductRecord(Long idOrderProduct, Long idOrder, Long idProduct) {
        super(SampleOrderProduct.SAMPLE_ORDER_PRODUCT);

        set(0, idOrderProduct);
        set(1, idOrder);
        set(2, idProduct);
    }
}
