/*
 * This file is generated by jOOQ.
 */
package br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.tables;


import br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.Indexes;
import br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.Keys;
import br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.Sample;
import br.com.mathidios.springboot.jooq.docker.oracle.model.jooq.tables.records.SampleDisheRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SampleDishe extends TableImpl<SampleDisheRecord> {

    private static final long serialVersionUID = -1825618346;

    /**
     * The reference instance of <code>SAMPLE.SAMPLE_DISHE</code>
     */
    public static final SampleDishe SAMPLE_DISHE = new SampleDishe();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SampleDisheRecord> getRecordType() {
        return SampleDisheRecord.class;
    }

    /**
     * The column <code>SAMPLE.SAMPLE_DISHE.ID_DISHE</code>.
     */
    public final TableField<SampleDisheRecord, Long> ID_DISHE = createField("ID_DISHE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>SAMPLE.SAMPLE_DISHE.NM_DISHE</code>.
     */
    public final TableField<SampleDisheRecord, String> NM_DISHE = createField("NM_DISHE", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>SAMPLE.SAMPLE_DISHE</code> table reference
     */
    public SampleDishe() {
        this(DSL.name("SAMPLE_DISHE"), null);
    }

    /**
     * Create an aliased <code>SAMPLE.SAMPLE_DISHE</code> table reference
     */
    public SampleDishe(String alias) {
        this(DSL.name(alias), SAMPLE_DISHE);
    }

    /**
     * Create an aliased <code>SAMPLE.SAMPLE_DISHE</code> table reference
     */
    public SampleDishe(Name alias) {
        this(alias, SAMPLE_DISHE);
    }

    private SampleDishe(Name alias, Table<SampleDisheRecord> aliased) {
        this(alias, aliased, null);
    }

    private SampleDishe(Name alias, Table<SampleDisheRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SampleDishe(Table<O> child, ForeignKey<O, SampleDisheRecord> key) {
        super(child, key, SAMPLE_DISHE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sample.SAMPLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ID_DISHE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SampleDisheRecord> getPrimaryKey() {
        return Keys.ID_DISHE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SampleDisheRecord>> getKeys() {
        return Arrays.<UniqueKey<SampleDisheRecord>>asList(Keys.ID_DISHE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleDishe as(String alias) {
        return new SampleDishe(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleDishe as(Name alias) {
        return new SampleDishe(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SampleDishe rename(String name) {
        return new SampleDishe(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SampleDishe rename(Name name) {
        return new SampleDishe(name, null);
    }
}
